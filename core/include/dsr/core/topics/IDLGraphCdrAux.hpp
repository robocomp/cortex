// Copyright 2016 Proyectos y Sistemas de Mantenimiento SL (eProsima).
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

/*!
 * @file IDLGraphCdrAux.hpp
 * This source file contains some definitions of CDR related functions.
 *
 * This file was generated by the tool fastddsgen.
 */

#ifndef FAST_DDS_GENERATED__IDLGRAPHCDRAUX_HPP
#define FAST_DDS_GENERATED__IDLGRAPHCDRAUX_HPP

#include "IDLGraph.hpp"

constexpr uint32_t PairInt_max_cdr_typesize {20UL};
constexpr uint32_t PairInt_max_key_cdr_typesize {0UL};

constexpr uint32_t DotContext_max_cdr_typesize {16UL};
constexpr uint32_t DotContext_max_key_cdr_typesize {0UL};

constexpr uint32_t DotKernelAttr_max_cdr_typesize {28UL};
constexpr uint32_t DotKernelAttr_max_key_cdr_typesize {0UL};


constexpr uint32_t GraphRequest_max_cdr_typesize {268UL};
constexpr uint32_t GraphRequest_max_key_cdr_typesize {0UL};

constexpr uint32_t MvregEdge_max_cdr_typesize {336UL};
constexpr uint32_t MvregEdge_max_key_cdr_typesize {0UL};

constexpr uint32_t DotKernel_max_cdr_typesize {28UL};
constexpr uint32_t DotKernel_max_key_cdr_typesize {0UL};

constexpr uint32_t Attrib_max_cdr_typesize {292UL};
constexpr uint32_t Attrib_max_key_cdr_typesize {0UL};

constexpr uint32_t MvregEdgeAttr_max_cdr_typesize {592UL};
constexpr uint32_t MvregEdgeAttr_max_key_cdr_typesize {0UL};

constexpr uint32_t IDLEdge_max_cdr_typesize {300UL};
constexpr uint32_t IDLEdge_max_key_cdr_typesize {0UL};

constexpr uint32_t EdgeKey_max_cdr_typesize {276UL};
constexpr uint32_t EdgeKey_max_key_cdr_typesize {0UL};

constexpr uint32_t IDLNode_max_cdr_typesize {556UL};
constexpr uint32_t IDLNode_max_key_cdr_typesize {0UL};

constexpr uint32_t OrMap_max_cdr_typesize {36UL};
constexpr uint32_t OrMap_max_key_cdr_typesize {0UL};

constexpr uint32_t MvregNodeAttr_max_cdr_typesize {328UL};
constexpr uint32_t MvregNodeAttr_max_key_cdr_typesize {0UL};

constexpr uint32_t DotKernelEdge_max_cdr_typesize {28UL};
constexpr uint32_t DotKernelEdge_max_key_cdr_typesize {0UL};

constexpr uint32_t MvregNode_max_cdr_typesize {56UL};
constexpr uint32_t MvregNode_max_key_cdr_typesize {0UL};

constexpr uint32_t MvregEdgeAttrVec_max_cdr_typesize {12UL};
constexpr uint32_t MvregEdgeAttrVec_max_key_cdr_typesize {0UL};

constexpr uint32_t MvregNodeAttrVec_max_cdr_typesize {12UL};
constexpr uint32_t MvregNodeAttrVec_max_key_cdr_typesize {0UL};


namespace eprosima {
namespace fastcdr {

class Cdr;
class CdrSizeCalculator;

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::Attrib& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::PairInt& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::DotContext& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::DotKernelAttr& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::MvregEdgeAttr& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::IDLEdge& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::EdgeKey& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::MvregNodeAttr& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::DotKernelEdge& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::MvregEdge& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::IDLNode& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::GraphRequest& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::DotKernel& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::MvregNode& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::OrMap& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::MvregEdgeAttrVec& data);

eProsima_user_DllExport void serialize_key(
        eprosima::fastcdr::Cdr& scdr,
        const IDL::MvregNodeAttrVec& data);


} // namespace fastcdr
} // namespace eprosima

#endif // FAST_DDS_GENERATED__IDLGRAPHCDRAUX_HPP

